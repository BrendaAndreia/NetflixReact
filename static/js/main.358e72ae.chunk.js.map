{"version":3,"sources":["Tmdb.js","components/MovieRow/index.js","components/FeaturedMovie/index.js","components/Header/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","MovieRow","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","FeaturedMovie","firstDate","Date","first_air_date","genres","i","push","name","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","Header","black","App","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","role","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.358e72ae.chunk.js","sourcesContent":["const API_KEY = '5b94642adc2d0e3d45ce51f3ccb0b0e4';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/*\r\n-originais da netflix\r\n-recomendados (trending)\r\n-em alta(top rated)\r\n-açao, comedia, terror, romance, documentários\r\n*/\r\nconst basicFetch = async (endpoint) =>{\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\nexport default  {\r\n    getHomeList: async () => {\r\n        return[\r\n             {\r\n                slug:'originals',\r\n                title:'Originais da Netflix',\r\n                items: await basicFetch(`/discover/tv?api_key=${API_KEY}&with_network=213`)\r\n            },\r\n            {\r\n                slug:'trending',\r\n                title:'Recomendados para Você',\r\n                 items: await basicFetch(`/trending/all/week?api_key=${API_KEY}&language=pt-BR`)\r\n            },\r\n            //  {\r\n            //     slug:'toprated',\r\n            //     title:'Em alta',\r\n            //     items: await basicFetch(`movie/top_rated?api_key=${API_KEY}&language=pt-BR`)\r\n            // },\r\n            {\r\n                slug:'action',\r\n                title:'Ação',\r\n                items: await basicFetch(`/discover/movie?language=pt-BR&api_key=${API_KEY}&with_genres=28`)\r\n            },\r\n            {\r\n                slug:'comedy',\r\n                title:'Comédia',\r\n                items: await basicFetch(`/discover/movie?language=pt-BR&api_key=${API_KEY}&with_genres=35`)\r\n            },\r\n            {\r\n                slug:'horror',\r\n                title:'Terror',\r\n                items: await basicFetch(`/discover/movie?language=pt-BR&api_key=${API_KEY}&with_genres=27`)\r\n            },\r\n            {\r\n                slug:'romance',\r\n                title:'Romance',\r\n                items: await basicFetch(`/discover/movie?language=pt-BR&api_key=${API_KEY}&with_genres=10749`)\r\n            },\r\n            {\r\n                slug:'documentary',\r\n                title:'Documentários',\r\n                items: await basicFetch(`/discover/movie?language=pt-BR&api_key=${API_KEY}&with_genres=99`)\r\n            },\r\n        ];\r\n    },\r\n    \r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?api_key=${API_KEY}&language=pt-BR`)\r\n                break;\r\n                default:\r\n                    break;\r\n            }   \r\n        }\r\n        return info;\r\n    }\r\n}\r\n","import React, {useState} from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nfunction MovieRow({title, items}) {\r\n    \r\n    const [scrollX, setScrollX] = useState(0);\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if(x > 0){\r\n            x = 0\r\n        }\r\n        setScrollX(x);\r\n    }\r\n    \r\n    const handleRightArrow = () =>{\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        if((window.innerWidth - listW) > x){\r\n            x = (window.innerWidth - listW) - 60\r\n        }\r\n        setScrollX(x);\r\n    }\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow-left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize:50}}/>\r\n            </div>\r\n            <div className=\"movieRow-right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize:50}}/>\r\n            </div>\r\n            <div className=\"movieRow-listarea\">\r\n            <div className=\"movieRow-list\" style={{\r\n                marginLeft: scrollX,\r\n                width: items.results.length * 150\r\n            }}>\r\n                {items.results.length > 0 && items.results.map((item, key)=>(\r\n                    <div key = {key} className=\"movieRow-item\">\r\n                        <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n         \r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default MovieRow\r\n","import React from 'react';\r\nimport './FeaturedMovie.css'\r\n\r\nfunction FeaturedMovie ({item}) {\r\n    \r\n    //console.log(item);\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for(let i in item.genres){\r\n        genres.push( item.genres[i].name);\r\n    } \r\n    return(\r\n        \r\n        <section className=\"featured\" \r\n        style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured-vertical\">\r\n                <div className=\"featured-horizontal\">\r\n                    <div className=\"featured-name\">\r\n                        {item.original_name}\r\n                    </div>\r\n                    <div className=\"featured-info\">\r\n                    <div className=\"featured-points\">{item.vote_average} pontos</div>\r\n                    <div className=\"featured-year\">{firstDate.getFullYear()}</div>\r\n                    <div className=\"featured-seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ?'s' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured-description\">{item.overview}</div>\r\n                    <div className=\"featured-buttons\">\r\n                        <a className=\"watch-btn\" href={`/watch/${item.id}`}>► Assistir</a>\r\n                        <a className=\"mylist-btn\" href={`/list/add/${item.id}`}>+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured-genres\"><strong>Gêneros: </strong>{genres.join(', ')}</div>\r\n                </div>\r\n            </div>            \r\n        </section>\r\n    )\r\n};\r\nexport default FeaturedMovie\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header ({black}) {\r\n    return(\r\n        <header className={black ? 'black' : ' '}>\r\n            <div className=\"header-logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"></img>\r\n                </a>\r\n            </div>\r\n            <div className=\"header-user\">\r\n            <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" alt=\"Usuário\"></img>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React, {useEffect, useState} from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport './App.css';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nconst App = () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n  \n  useEffect(()=>{\n    const loadAll = async () =>{\n      //Pegando a lista toda\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o destaque\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n    loadAll();\n  }, []);\n  \n  useEffect(()=> {\n    const scrollListener = () =>{\n      if(window.scrollY > 10){\n        setBlackHeader(true);\n      }\n      else{\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n  \n    return() => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n  return(\n    <div className = \"page\">\n\n      <Header black = {blackHeader}/>\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n      \n      <section className=\"lists\">\n        {movieList.map((item, key)=>(\n          \n            <MovieRow key={key} title={item.title} items={item.items} />\n        \n        ))}\n      </section>\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"coração\">♥</span><br/>\n        Direitos de imagem para Netflix <br/>\n        Dados pegos do site Themoviebd.org\n      </footer>\n\n      {movieList.length <= 0 && \n      <div className=\"loading\">\n        <img src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\"></img>\n      </div>\n      }\n    </div>\n  );\n};\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(\n  <React.StrictMode>\n    <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}